#org.gradle.jvmargs=-Xmx7g -Xms256m -XX:MaxMetaspaceSize=1g -XX:+UseParallelGC
org.gradle.jvmargs=-Xmx5g -XX:+UseParallelGC
org.gradle.parallel=true
#kotlin.daemon.jvmargs=-Xmx6g -XX:MaxMetaspaceSize=1g
kotlin.daemon.jvmargs=-Xmx6g -XX:+UseG1GC
android.useAndroidX=true
org.gradle.configuration-cache=false
# We never want to use auto-provisioning, as it breaks reproducible builds.
# This should not be a problem, because we never configure a "javaRepositories"
# item to tell Gradle where to auto-provision the toolchain from, but adding
# this flag adds an extra layer of protection.
# See: https://docs.gradle.org/current/userguide/toolchains.html#sub:disable_auto_provision
org.gradle.java.installations.auto-download=false

# historical attempts to lower memory usage for github actions: https://github.com/actions/runner-images/discussions/7188
# org.gradle.jvmargs=-Xmx3500m -Xms256m -XX:MaxMetaspaceSize=900m # -XX:+UseParallelGC
# org.gradle.daemon=false
kotlin.compiler.execution.strategy=in-process
org.gradle.parallel=false
# org.gradle.configureondemand=false
# org.gradle.caching=false
# org.gradle.unsafe.configuration-cache=false
# org.gradle.configuration-cache=false
# org.gradle.console=plain
org.gradle.priority=low
org.gradle.workers.max=4

# Uncomment these to build libsignal from source.
# libsignalClientPath=../libsignal
# org.gradle.dependency.verification=lenient
